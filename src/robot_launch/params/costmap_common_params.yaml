footprint:
  [[-0.102, -0.0475], [-0.102, 0.0475], [0.032, 0.0475], [0.032, -0.0475]]
# 0.135 0.095  0.032
transform_tolerance: 0.5
map_type: costmap

obstacle_scan_layer:
  enabled: true
  combination_method: 1
  observation_sources: "scan"

  #对传感器的坐标系和数据进行配置。这个也会用于代价地图添加和清除障碍物。例如，你可以用激光雷达传感器用于在代价地图添加障碍物，再添加kinect用于导航和清除障碍物。
  scan:
    {
      sensor_frame: scan,
      data_type: PointCloud,
      topic: /voxel_mapping/points,
      marking: true,
      clearing: true,
      max_obstacle_height: 1.0,
      min_obstacle_height: -1.0,
      obstacle_range: 3.0,
      raytrace_range: 3.4,
    }

inflation_planner_layer:
  enabled: true
  cost_scaling_factor: 10.0 # exponential rate at which the obstacle cost drops off (default: 10)
  inflation_radius: 0.3 # max. distance from an obstacle at which costs are incurred for planning paths.

inflation_controller_layer:
  enabled: true
  cost_scaling_factor: 10.0 # exponential rate at which the obstacle cost drops off (default: 10)
  inflation_radius: 0.1 # max. distance from an obstacle at which costs are incurred for planning paths.

planner_static_layer:
  enabled: true
  track_unknown_space: true
  map_topic: "/map"

controller_static_layer:
  enabled: true
  track_unknown_space: true
  map_topic: "/map"
